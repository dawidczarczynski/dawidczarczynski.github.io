{"version":3,"file":"component---src-pages-index-tsx-56584454698fedca8fef.js","mappings":"wQAUO,SAASA,EAAT,GAAsE,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,IACpCC,GAAQC,EAAAA,EAAAA,GAASH,GAEvB,OACII,EAAAA,cAAAA,EAAAA,SAAAA,KACKF,GAASE,EAAAA,cAACC,EAAAA,EAAD,CAAaC,UCdL,uDDcyCJ,MAAOA,EAAOD,IAAKA,KERnF,SAASM,EAAT,GAAuE,IAAzCC,EAAwC,EAAxCA,YACjC,OACIJ,EAAAA,cAAAA,IAAAA,CACIE,UCTiB,uDDUjBG,wBAAyB,CACrBC,OAAQF,GAEZG,SAAS,gBEbd,I,QCaA,SAASC,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,KACpBC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAC9CT,EAAcK,EAAKE,YAAYP,aAAeK,EAAKK,QAEzD,OACId,EAAAA,cAAAA,UAAAA,CACIE,UDlBc,6CCmBda,WAAS,EACTC,SAAS,6BAEThB,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACiB,EAAAA,KAAD,CAAMC,GAAIT,EAAKG,OAAOC,KAAMN,SAAS,MAAMY,MAAO,CAAEC,eAAgB,SAChEpB,EAAAA,cAACL,EAAD,CAAkBC,UAAWa,EAAKE,YAAYb,MAAMuB,IAAKxB,IAAKY,EAAKE,YAAYb,MAAMD,MACrFG,EAAAA,cAAAA,KAAAA,CAAIO,SAAS,YAAYG,KAGjCV,EAAAA,cAAAA,UAAAA,CAASE,UD7BI,4CC8BTF,EAAAA,cAAAA,MAAAA,CAAKE,UD5BK,6CC6BNF,EAAAA,cAACsB,EAAAA,EAAD,CACIC,KAAMd,EAAKE,YAAYY,KACvBC,SAAUf,EAAKE,YAAYa,YAEnCxB,EAAAA,cAACG,EAAD,CACIC,YAAaA,MC3B1B,SAASqB,EAAT,GAAkD,IAAD,IAA7BC,MAAAA,OAA6B,MAArB,GAAqB,EACpD,OAAKA,EAAMC,OAWP3B,EAAAA,cAAAA,KAAAA,CAAIE,UCrBc,2CDsBbwB,EAAME,KAAI,SAAAnB,GACP,OACIT,EAAAA,cAAAA,KAAAA,CAAI6B,IAAKpB,EAAKG,OAAOC,MACjBb,EAAAA,cAACQ,EAAD,CAAaC,KAAMA,SAb/BT,EAAAA,cAAAA,IAAAA,KAAAA,6J,cESG,SAAS8B,EAAT,GAAwD,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAChCC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBzB,QAAxB,QACZgB,EAAQK,EAAKK,kBAAkBC,MAErC,OACIrC,EAAAA,cAACsC,EAAAA,EAAD,CAAQN,SAAUA,EAAUtB,MAAOuB,GAC/BjC,EAAAA,cAACuC,EAAAA,EAAD,CAAK7B,MAAO8B,EAAAA,EAAAA,YACZxC,EAAAA,cAACyC,EAAAA,EAAD,MACAzC,EAAAA,cAACyB,EAAD,CAAUC,MAAOA","sources":["webpack://dawidczarczynski-engineering-blog/./src/components/post-preview/PostPreviewImage.tsx","webpack://dawidczarczynski-engineering-blog/./src/components/post-preview/post-preview-image.module.css","webpack://dawidczarczynski-engineering-blog/./src/components/post-preview/PostPreviewContent.tsx","webpack://dawidczarczynski-engineering-blog/./src/components/post-preview/post-preview-content.module.css","webpack://dawidczarczynski-engineering-blog/./src/components/post-preview/post-preview.module.css","webpack://dawidczarczynski-engineering-blog/./src/components/post-preview/PostPreview.tsx","webpack://dawidczarczynski-engineering-blog/./src/components/all-posts/AllPosts.tsx","webpack://dawidczarczynski-engineering-blog/./src/components/all-posts/all-posts.module.css","webpack://dawidczarczynski-engineering-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { GatsbyImage, getImage, ImageDataLike } from 'gatsby-plugin-image'\n\nimport * as styles from './post-preview-image.module.css'\n\ninterface PostPreviewImageProps {\n    imageData: ImageDataLike\n    alt: string\n}\n\nexport function PostPreviewImage({ imageData, alt }: PostPreviewImageProps) {\n    const image = getImage(imageData)\n\n    return (\n        <>\n            {image && <GatsbyImage className={styles.postPreviewImage} image={image} alt={alt} />}\n        </>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport var postPreviewImage = \"post-preview-image-module--post-preview-image--gacmO\";","import * as React from 'react'\nimport * as styles from './post-preview-content.module.css'\n\ninterface PostPreviewContentProps {\n    description: string\n}\n\nexport function PostPreviewContent({ description }: PostPreviewContentProps) {\n    return (\n        <p\n            className={styles.postDescription}\n            dangerouslySetInnerHTML={{\n                __html: description,\n            }}\n            itemProp=\"description\"\n        />\n    )\n}","// extracted by mini-css-extract-plugin\nexport var postDescription = \"post-preview-content-module--post-description--O-uTi\";","// extracted by mini-css-extract-plugin\nexport var postContent = \"post-preview-module--post-content--Lf619\";\nexport var postListItem = \"post-preview-module--post-list-item--w9f2P\";\nexport var postMetadata = \"post-preview-module--post-metadata--jMONd\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { PostBasics } from '../../model/post-basics'\nimport { PostPreviewImage } from './PostPreviewImage'\nimport { PostPreviewContent } from './PostPreviewContent'\n\nimport * as styles from './post-preview.module.css'\nimport { PostMetadata } from '../post-metadata/PostMetadata'\n\n\ninterface PostPreviewProps {\n    post: PostBasics\n}\n\nexport function PostPreview({ post }: PostPreviewProps) {\n    const title = post.frontmatter.title || post.fields.slug\n    const description = post.frontmatter.description || post.excerpt\n\n    return (\n        <article\n            className={styles.postListItem}\n            itemScope\n            itemType=\"http://schema.org/Article\"\n        >\n            <header>\n                <Link to={post.fields.slug} itemProp=\"url\" style={{ textDecoration: 'none' }}>\n                    <PostPreviewImage imageData={post.frontmatter.image.src} alt={post.frontmatter.image.alt} />\n                    <h2 itemProp=\"headline\">{title}</h2>\n                </Link>\n            </header>\n            <section className={styles.postContent}>\n                <div className={styles.postMetadata}>\n                    <PostMetadata \n                        date={post.frontmatter.date}\n                        category={post.frontmatter.category} />\n                </div>\n                <PostPreviewContent \n                    description={description} />\n            </section>\n        </article>\n    )\n}\n","import * as React from 'react'\nimport { PostBasics } from '../../model/post-basics'\nimport { PostPreview } from '../post-preview/PostPreview'\n\nimport * as styles from './all-posts.module.css'\n\ninterface AllPostsProps {\n    posts: PostBasics[]\n}\n\nexport function AllPosts({ posts = [] }: AllPostsProps) {\n    if (!posts.length) {\n        return (\n            <p>\n                No blog posts found. Add markdown posts to \"content/blog\" (or\n                the directory you specified for the \"gatsby-source-filesystem\"\n                plugin in gatsby-config.js).\n            </p>\n        )\n    }\n\n    return (\n        <ol className={styles.allPostsList}>\n            {posts.map(post => {\n                return (\n                    <li key={post.fields.slug} >\n                        <PostPreview post={post}></PostPreview>\n                    </li>\n                )\n            })}\n        </ol>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport var allPostsList = \"all-posts-module--all-posts-list--qlVrY\";","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { SiteMetadata, PostBasics } from '../model'\nimport { Layout } from '../components/Layout'\nimport { Bio } from '../components/bio/Bio'\nimport { Seo } from '../components/seo/Seo'\nimport { AllPosts } from '../components/all-posts/AllPosts'\nimport { Texts } from '../constants/texts'\n\ninterface BlogIndexProps {\n    data: {\n        site: {\n            siteMetadata: SiteMetadata\n        }\n        allMarkdownRemark: {\n            nodes: PostBasics[]\n        }\n    }\n    location: Location\n}\n\nexport default function BlogIndex({ data, location }: BlogIndexProps) {\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const posts = data.allMarkdownRemark.nodes\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title={Texts.ALL_POSTS} />\n            <Bio />\n            <AllPosts posts={posts} />\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            nodes {\n                excerpt\n                fields {\n                    slug\n                }\n                frontmatter {\n                    date(formatString: \"MMMM DD, YYYY\")\n                    title\n                    description\n                    category\n                    image {\n                        src {\n                            childImageSharp {\n                                gatsbyImageData(width: 500)\n                            }\n                        }\n                        alt\n                    }\n                }\n            }\n        }\n    }\n`\n"],"names":["PostPreviewImage","imageData","alt","image","getImage","React","GatsbyImage","className","PostPreviewContent","description","dangerouslySetInnerHTML","__html","itemProp","PostPreview","post","title","frontmatter","fields","slug","excerpt","itemScope","itemType","Link","to","style","textDecoration","src","PostMetadata","date","category","AllPosts","posts","length","map","key","BlogIndex","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","Layout","Seo","Texts","Bio"],"sourceRoot":""}