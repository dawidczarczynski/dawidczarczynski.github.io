{"version":3,"file":"component---src-templates-blog-post-tsx-8255a8ae251a7ed92651.js","mappings":"oQAYO,SAASA,EAAT,GAA4C,IAAxBC,EAAuB,EAAvBA,KACjBC,GAAQC,EAAAA,EAAAA,GAASF,EAAKG,YAAYF,MAAMG,KAE9C,OACIC,EAAAA,cAAAA,UAAAA,CACIC,UChBU,qCDiBVC,WAAS,EACTC,SAAS,6BAETH,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,CAAII,SAAS,YAAYT,EAAKG,YAAYO,OAC1CL,EAAAA,cAAAA,MAAAA,CAAKC,UCrBS,+CDsBVD,EAAAA,cAACM,EAAAA,EAAD,CACIC,KAAMZ,EAAKG,YAAYS,KACvBC,SAAUb,EAAKG,YAAYU,SAC3BC,cAAc,MAG1BT,EAAAA,cAAAA,UAAAA,KACMJ,GAASI,EAAAA,cAACU,EAAAA,EAAD,CACPd,MAAOA,EACPe,IAAKhB,EAAKG,YAAYF,MAAMe,MAChCX,EAAAA,cAAAA,IAAAA,CACIY,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCV,SAAS,iBAEjBJ,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACe,EAAAA,EAAD,Q,cE7BT,SAASC,EAAT,GAAkE,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,KACvC,OACIlB,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,CAAIC,UCbS,gDDcTD,EAAAA,cAAAA,KAAAA,KACKiB,GACGjB,EAAAA,cAACmB,EAAAA,KAAD,CAAMC,GAAIH,EAASI,OAAOC,KAAMC,IAAI,QAApC,KACON,EAASnB,YAAYO,QAIpCL,EAAAA,cAAAA,KAAAA,KACKkB,GACGlB,EAAAA,cAACmB,EAAAA,KAAD,CAAMC,GAAIF,EAAKG,OAAOC,KAAMC,IAAI,QAC3BL,EAAKpB,YAAYO,MADtB,SEHT,SAASmB,EAAT,GAGY,IAAD,EAFtBC,EAEsB,EAFtBA,KACAC,EACsB,EADtBA,SAEM/B,EAAO8B,EAAKE,eACZC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBzB,QAAxB,QACVY,EAAmBQ,EAAnBR,SAAUC,EAASO,EAATP,KAElB,OACIlB,EAAAA,cAAC+B,EAAAA,EAAD,CAAQL,SAAUA,EAAUrB,MAAOuB,GAC/B5B,EAAAA,cAACgC,EAAAA,EAAD,CACI3B,MAAOV,EAAKG,YAAYO,MACxB4B,YAAatC,EAAKG,YAAYmC,aAAetC,EAAKuC,UAEtDlC,EAAAA,cAACN,EAAD,CAAUC,KAAMA,IAChBK,EAAAA,cAACgB,EAAD,CAAgBC,SAAUA,EAAUC,KAAMA","sources":["webpack://dawidczarczynski-engineering-blog/./src/components/full-post/FullPost.tsx","webpack://dawidczarczynski-engineering-blog/./src/components/full-post/full-post.module.css","webpack://dawidczarczynski-engineering-blog/./src/components/post-navigation/PostNavigation.tsx","webpack://dawidczarczynski-engineering-blog/./src/components/post-navigation/post-navigation.module.css","webpack://dawidczarczynski-engineering-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport * as React from 'react'\nimport { PostDetails } from '../../model/post-details'\nimport { Bio } from '../bio/Bio'\nimport { PostMetadata } from '../post-metadata/PostMetadata'\n\nimport * as styles from './full-post.module.css'\n\ninterface FullPostProps {\n    post: PostDetails\n}\n\nexport function FullPost({ post }: FullPostProps) {\n    const image = getImage(post.frontmatter.image.src)\n\n    return (\n        <article\n            className={styles.blogPost}\n            itemScope\n            itemType=\"http://schema.org/Article\"\n        >\n            <header>\n                <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                <div className={styles.blogPostMetadata}>\n                    <PostMetadata\n                        date={post.frontmatter.date} \n                        category={post.frontmatter.category}\n                        showDistance={false} />\n                </div>\n            </header>\n            <section>\n                 {image && <GatsbyImage \n                    image={image} \n                    alt={post.frontmatter.image.alt} />}\n                <p\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                    itemProp=\"articleBody\" />\n            </section>\n            <hr />\n            <footer>\n                <Bio />\n            </footer>\n        </article>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport var blogPost = \"full-post-module--blog-post--8tuYt\";\nexport var blogPostMetadata = \"full-post-module--blog-post-metadata--okPHy\";","import { Link } from 'gatsby'\nimport * as React from 'react'\nimport { NavigationPost } from '../../model'\n\nimport * as styles from './post-navigation.module.css'\n\ninterface PostNavigationProps {\n    previous: NavigationPost\n    next: NavigationPost\n}\n\nexport function PostNavigation({ previous, next }: PostNavigationProps) {\n    return (\n        <nav>\n            <ul className={styles.blogPostNav}>\n                <li>\n                    {previous && (\n                        <Link to={previous.fields.slug} rel=\"prev\">\n                            ← {previous.frontmatter.title}\n                        </Link>\n                    )}\n                </li>\n                <li>\n                    {next && (\n                        <Link to={next.fields.slug} rel=\"next\">\n                            {next.frontmatter.title} →\n                        </Link>\n                    )}\n                </li>\n            </ul>\n        </nav>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport var blogPostNav = \"post-navigation-module--blog-post-nav--OF+ZS\";","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { SiteMetadata, NavigationPost, PostDetails } from '../model'\nimport { Layout } from '../components/Layout'\nimport { Seo } from '../components/seo/Seo'\nimport { FullPost } from '../components/full-post/FullPost'\nimport { PostNavigation } from '../components/post-navigation/PostNavigation'\n\ninterface BlogPostTemplateProps {\n    data: {\n        site: {\n            siteMetadata: SiteMetadata\n        }\n        markdownRemark: PostDetails\n        previous: NavigationPost\n        next: NavigationPost\n    }\n    location: Location\n}\n\nexport default function BlogPostTemplate({\n    data,\n    location,\n}: BlogPostTemplateProps) {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const { previous, next } = data\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n            />\n            <FullPost post={post} />\n            <PostNavigation previous={previous} next={next} />\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug(\n        $id: String!\n        $previousPostId: String\n        $nextPostId: String\n    ) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n                category\n                image {\n                    src {\n                        childImageSharp {\n                            gatsbyImageData(width: 1200)\n                        }\n                    }\n                    alt\n                }\n            }\n        }\n        previous: markdownRemark(id: { eq: $previousPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n        next: markdownRemark(id: { eq: $nextPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n    }\n`\n"],"names":["FullPost","post","image","getImage","frontmatter","src","React","className","itemScope","itemType","itemProp","title","PostMetadata","date","category","showDistance","GatsbyImage","alt","dangerouslySetInnerHTML","__html","html","Bio","PostNavigation","previous","next","Link","to","fields","slug","rel","BlogPostTemplate","data","location","markdownRemark","siteTitle","site","siteMetadata","Layout","Seo","description","excerpt"],"sourceRoot":""}